"""Обробка аргументів командного рядка в Python здійснюється за допомогою модуля sys.

Отримати передані при запуску скрипту аргументи можна через список argv з пакета sys, де з'являються всі аргументи, з якими було запущено скрипт. Змінна sys.argv є списком рядків. Вона містить список аргументів командного рядка, тобто аргументів, переданих програмі із командного рядка.

Наприклад, створимо файл test.py з таким вмістом:

import sys

for arg in sys.argv:
    print(arg)
Якщо ми запустимо наш скрипт і передамо до нього аргументи,

python test.py -help user --flag
то отримаємо наступний вивід у консолі

test.py
-help
user
--flag
Цікавою особливістю sys.argv є те, що першим елементом цього списку буде назва файлу скрипту test.py. Всі аргументи будуть в sys.argv у вигляді рядків у тому самому порядку, в якому вони були передані при виклику скрипту. Якщо ви очікуєте, що користувач повинен ввести число (ціле або дійсне), то вам потрібно перетворити рядок на потрібний вам тип самостійно. Python розділяє аргументи пробілами та в sys.argv пробіли не потрапляють."""


"""Створіть функцію parse_args, яка повертає рядок, складений з аргументів командного рядка, розділених пробілами. Наприклад, якщо скрипт був викликаний командою: python run.py first second, то функція parse_args повинна повернути рядок наступного виду 'first second'."""


import sys


def parse_args():
    result = ""
    i = 0
    for arg in sys.argv:
        if i > 0:
            result += f'{arg} '
            i += 1
        else:
            i += 1
    
        
            
    print(result.rstrip())    
    return result.rstrip()

parse_args()