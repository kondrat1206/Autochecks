"""Ключові аргументи є парою «ім'я-значення» при виклику функції. Ім'я та значення пов'язуються з аргументом безпосередньо, і плутанина з порядком виключається. Також ключові аргументи знімають проблему порядку аргументів під час виклику функції та фактично пояснюють роль кожного значення під час виклику функції.

def fun(a, b=2, c=3):
    return a + b * c


print(fun(b=4, c=4, a=2))  # 18
print(fun(c=1, a=2, b=3))  # 5
print(fun(c=3, b=2, a=7))  # 13
Як бачимо, при виклику функції, наприклад fun(b=4, c=4, a=2), змінній b буде надано значення 4, хоча, як ми бачимо, вона знаходиться на першому місці під час виклику функції, а параметр — на другому у визначенні функції. Це ж стосується й інших змінних a та c, оскільки при виклику ми використовуємо ключові аргументи."""


"""Створіть функцію format_string для форматування рядка. У функцію ми передаємо рядок string та length довжину нового рядка. Функція повертає новий рядок за наступним алгоритмом:

Якщо довжина вихідного рядка більша або дорівнює length, ми повертаємо його в тому ж вигляді;
Якщо вона менша length, ми додаємо попереду рядка пробіли в кількості (length - len(string)) // 2.
Тести на правильність роботи функції виконуються для наступних наборів аргументів:

string='aaaaaaaaaaaaaaaaac', length=12
length=15, string='abaa'"""


def format_string(string=None, length=0):
    lentgth_string = len(string)
    if lentgth_string >= length:
        string = string
    else:
        string = (length - len(string)) // 2 * ' ' + string
    return string

string = format_string(string='adadafstg', length=3)
print(string)